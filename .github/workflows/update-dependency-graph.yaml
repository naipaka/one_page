name: Update Dependency Graph

on:
  push:
    branches:
      - main

env:
  BRANCH_NAME: update-dependency-graph

jobs:
  generate-and-compare:
    name: Generate and Compare Dependency Graph
    runs-on: ubuntu-latest
    outputs:
      has_diff: ${{ steps.check_diff.outputs.has_diff }}
    steps:
      - uses: actions/checkout@v4

      - name: Setup Flutter with FVM
        uses: kuhnroyal/flutter-fvm-config-action/setup@v3

      - name: Prepare Melos
        run: echo "MELOS_SDK_PATH=${{ env.FLUTTER_ROOT }}" >> "$GITHUB_ENV"

      - name: Install Melos
        uses: bluefireteam/melos-action@v3

      - name: Install Melos and Graphviz
        run: |
          dart pub global activate melos
          sudo apt-get update
          sudo apt-get install -y graphviz

      - name: Ensure Docs Directory Exists
        run: mkdir -p "./docs"

      - name: Ensure Previous Dependency Graph Exists
        run: |
          if [ ! -f "./docs/dependency_graph.dot" ]; then
            touch "./docs/dependency_graph.dot"
          fi

      - name: Generate Dependency Graph
        run: |
          melos list --gviz > "dependency_graph.dot"

      - name: Compare with Previous Output
        id: check_diff
        run: |
          if diff "dependency_graph.dot" "./docs/dependency_graph.dot"; then
            echo "has_diff=false" >> "$GITHUB_OUTPUT"
          else
            echo "has_diff=true" >> "$GITHUB_OUTPUT"
          fi

  create-branch:
    name: Create Branch
    runs-on: ubuntu-latest
    needs: generate-and-compare
    if: needs.generate-and-compare.outputs.has_diff == 'true'
    steps:
      - uses: actions/checkout@v4

      - name: Create or Checkout Branch
        run: |
          if git ls-remote --exit-code --heads origin "${{ env.BRANCH_NAME }}"; then
            git switch "${{ env.BRANCH_NAME }}"
          else
            git switch -c "${{ env.BRANCH_NAME }}"
            git push --set-upstream origin "${{ env.BRANCH_NAME }}"
          fi

  commit-changes:
    name: Commit Changes
    runs-on: ubuntu-latest
    needs: create-branch
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ env.BRANCH_NAME }}

      - name: Generate SVG Image
        run: dot -Tsvg "dependency_graph.dot" -o "./docs/dependency_graph.svg"

      - name: Update Docs Directory
        run: |
          mv "dependency_graph.dot" "./docs/dependency_graph.dot"

      - name: Git Config
        run: |
          git remote set-url origin "https://github-actions:${GH_TOKEN}@github.com/${GITHUB_REPOSITORY}"
          git config --global user.name "${GITHUB_ACTOR}"
          git config --global user.email "${GITHUB_ACTOR}@users.noreply.github.com"

      - name: Commit Changes
        run: |
          git add "./docs/dependency_graph.dot" "./docs/dependency_graph.svg"
          git commit -m "Update Dependency Graph and SVG image"

      - name: Push Changes
        run: git push origin "${{ env.BRANCH_NAME }}"

  create-pr:
    name: Create Pull Request
    runs-on: ubuntu-latest
    needs: commit-changes
    permissions:
      contents: write
      pull-requests: write
    steps:
      - uses: actions/checkout@v4

      - name: Generate GitHub App token
        id: generate_token
        uses: actions/create-github-app-token@v1
        with:
          app-id: ${{ vars.PR_WRITER_APP_ID }}
          private-key: ${{ secrets.PR_WRITER_PRIVATE_KEY }}

      - name: Create Pull Request
        env:
          GITHUB_TOKEN: ${{ steps.generate_token.outputs.token }}
          title: "Update Dependency Graph"
          body: "This pull request updates the Dependency Graph and SVG image."
        run: |
          gh pr create -B "main" -H "${{ env.BRANCH_NAME }}" -t "${{ env.title }}" -b "${{ env.body }}" -a "$GITHUB_ACTOR"
